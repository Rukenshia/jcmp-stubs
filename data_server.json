[{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Vector4",
"functions": [
],
"properties": [
{
"name": "x", 
"isWriteable": false,
"type": "int"
},
{
"name": "y", 
"isWriteable": false,
"type": "int"
},
{
"name": "z", 
"isWriteable": false,
"type": "int"
},
{
"name": "a", 
"isWriteable": false,
"type": "int"
},
{
"name": "length", 
"isWriteable": false,
"type": "double"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Vector2f",
"functions": [
],
"properties": [
{
"name": "x", 
"isWriteable": true,
"type": "float"
},
{
"name": "y", 
"isWriteable": true,
"type": "float"
},
{
"name": "length", 
"isWriteable": false,
"type": "double"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": false,
"canHaveCustomProperties": true,
"name": "JCMPNamespace",
"functions": [
{
"name": "Destroy", 
"returnType": "void",
"args": [
]
}
],
"properties": [
{
"name": "packages", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "server", 
"isWriteable": false,
"type": "class Server * __ptr64"
},
{
"name": "networkVersion", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "players", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "vehicles", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "objects", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "poi", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "checkpoints", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Vector3",
"functions": [
],
"properties": [
{
"name": "x", 
"isWriteable": true,
"type": "int"
},
{
"name": "y", 
"isWriteable": true,
"type": "int"
},
{
"name": "z", 
"isWriteable": true,
"type": "int"
},
{
"name": "length", 
"isWriteable": false,
"type": "double"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Package",
"functions": [
{
"name": "Start", 
"returnType": "bool",
"args": [
]
},
{
"name": "Stop", 
"returnType": "void",
"args": [
]
}
],
"properties": [
{
"name": "name", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "dir", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "valid", 
"isWriteable": false,
"type": "bool"
},
{
"name": "config", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "EventSystem",
"functions": [
{
"name": "Add", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >",
"class std::shared_ptr<class scr::IScriptFunction>"
]
},
{
"name": "Call", 
"returnType": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >",
"class std::vector<class scr::ScriptArg,class std::allocator<class scr::ScriptArg> >"
]
},
{
"name": "AddRemoteCallable", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >",
"class std::shared_ptr<class scr::IScriptFunction>"
]
},
{
"name": "CallRemote", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >",
"class ISyncableEntity * __ptr64",
"class std::vector<class scr::ScriptArg,class std::allocator<class scr::ScriptArg> >"
]
}
],
"properties": [
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "RGB",
"functions": [
],
"properties": [
{
"name": "r", 
"isWriteable": true,
"type": "int"
},
{
"name": "g", 
"isWriteable": true,
"type": "int"
},
{
"name": "b", 
"isWriteable": true,
"type": "int"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": false,
"canHaveCustomProperties": true,
"name": "Checkpoint",
"functions": [
{
"name": "Destroy", 
"returnType": "void",
"args": [
]
},
{
"name": "SetVisibleForPlayer", 
"returnType": "void",
"args": [
"class IPlayer * __ptr64",
"bool"
]
},
{
"name": "IsVisibleForPlayer", 
"returnType": "bool",
"args": [
"class IPlayer * __ptr64"
]
}
],
"properties": [
{
"name": "modelHash", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "networkId", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "position", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "rotation", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "radius", 
"isWriteable": true,
"type": "float"
},
{
"name": "visible", 
"isWriteable": true,
"type": "bool"
},
{
"name": "dimension", 
"isWriteable": true,
"type": "unsigned int"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Vector3f",
"functions": [
],
"properties": [
{
"name": "x", 
"isWriteable": true,
"type": "float"
},
{
"name": "y", 
"isWriteable": true,
"type": "float"
},
{
"name": "z", 
"isWriteable": true,
"type": "float"
},
{
"name": "length", 
"isWriteable": false,
"type": "double"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "RGBA",
"functions": [
],
"properties": [
{
"name": "r", 
"isWriteable": false,
"type": "unsigned char"
},
{
"name": "g", 
"isWriteable": false,
"type": "unsigned char"
},
{
"name": "b", 
"isWriteable": false,
"type": "unsigned char"
},
{
"name": "a", 
"isWriteable": false,
"type": "unsigned char"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Vector2",
"functions": [
],
"properties": [
{
"name": "x", 
"isWriteable": true,
"type": "int"
},
{
"name": "y", 
"isWriteable": true,
"type": "int"
},
{
"name": "length", 
"isWriteable": false,
"type": "double"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Vector4f",
"functions": [
],
"properties": [
{
"name": "x", 
"isWriteable": false,
"type": "float"
},
{
"name": "y", 
"isWriteable": false,
"type": "float"
},
{
"name": "z", 
"isWriteable": false,
"type": "float"
},
{
"name": "a", 
"isWriteable": false,
"type": "float"
},
{
"name": "length", 
"isWriteable": false,
"type": "double"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Argument",
"functions": [
],
"properties": [
{
"name": "key", 
"isWriteable": true,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "value", 
"isWriteable": true,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "Server",
"functions": [
{
"name": "Stop", 
"returnType": "void",
"args": [
]
},
{
"name": "Restart", 
"returnType": "void",
"args": [
]
},
{
"name": "AddInputHandler", 
"returnType": "void",
"args": [
"class std::shared_ptr<class scr::IScriptFunction>"
]
}
],
"properties": [
{
"name": "args", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "config", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "currentTickRate", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "upTime", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "clients", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "PlayerWorld",
"functions": [
{
"name": "SetTime", 
"returnType": "void",
"args": [
"unsigned char",
"unsigned char",
"unsigned char"
]
}
],
"properties": [
{
"name": "weather", 
"isWriteable": true,
"type": "signed char"
},
{
"name": "timeScale", 
"isWriteable": true,
"type": "float"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": false,
"canHaveCustomProperties": false,
"name": "GameObject",
"functions": [
{
"name": "Destroy", 
"returnType": "void",
"args": [
]
},
{
"name": "applyForce", 
"returnType": "void",
"args": [
"class math::basic_vector3<float>",
"float"
]
}
],
"properties": [
{
"name": "model", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "networkId", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "position", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "rotation", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "dimension", 
"isWriteable": true,
"type": "unsigned int"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "RemoteClient",
"functions": [
{
"name": "Kick", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
]
},
{
"name": "DoesOwnDLC", 
"returnType": "bool",
"args": [
"int"
]
}
],
"properties": [
{
"name": "name", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "ipAddress", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "networkId", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "ping", 
"isWriteable": false,
"type": "int"
},
{
"name": "steamId", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "steamAuthenticated", 
"isWriteable": false,
"type": "bool"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": true,
"name": "Player",
"functions": [
{
"name": "Kick", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
]
},
{
"name": "Respawn", 
"returnType": "void",
"args": [
]
},
{
"name": "GiveWeapon", 
"returnType": "class PlayerWeapon * __ptr64",
"args": [
"unsigned int",
"unsigned int",
"bool"
]
}
],
"properties": [
{
"name": "client", 
"isWriteable": false,
"type": "class IRemoteClient * __ptr64"
},
{
"name": "name", 
"isWriteable": false,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "networkId", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "health", 
"isWriteable": true,
"type": "short"
},
{
"name": "position", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "respawnPosition", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "rotation", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "aimPosition", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "weapons", 
"isWriteable": false,
"type": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >"
},
{
"name": "selectedWeapon", 
"isWriteable": false,
"type": "class PlayerWeapon * __ptr64"
},
{
"name": "model", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "dimension", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "vehicle", 
"isWriteable": false,
"type": "class Vehicle * __ptr64"
},
{
"name": "nametag", 
"isWriteable": false,
"type": "class Nametag * __ptr64"
},
{
"name": "world", 
"isWriteable": false,
"type": "class PlayerWorld * __ptr64"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "PlayerWeapon",
"functions": [
],
"properties": [
{
"name": "modelHash", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "slotIndex", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "magazineAmmo", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "reserveAmmo", 
"isWriteable": true,
"type": "unsigned int"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": false,
"canHaveCustomProperties": false,
"name": "Vehicle",
"functions": [
{
"name": "Destroy", 
"returnType": "void",
"args": [
]
},
{
"name": "SetOccupant", 
"returnType": "void",
"args": [
"unsigned char",
"class ISyncableEntity * __ptr64"
]
},
{
"name": "GetOccupant", 
"returnType": "class ISyncableEntity * __ptr64",
"args": [
"unsigned char"
]
},
{
"name": "Respawn", 
"returnType": "void",
"args": [
]
}
],
"properties": [
{
"name": "driver", 
"isWriteable": true,
"type": "class ISyncableEntity * __ptr64"
},
{
"name": "modelHash", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "health", 
"isWriteable": true,
"type": "short"
},
{
"name": "destroyed", 
"isWriteable": false,
"type": "bool"
},
{
"name": "networkId", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "position", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "aimPosition", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "rotation", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "linearVelocity", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "angularVelocity", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "primaryColor", 
"isWriteable": true,
"type": "short"
},
{
"name": "dimension", 
"isWriteable": true,
"type": "unsigned int"
}
]
},
{
"isConstructible": true,
"isAutoDestroy": false,
"canHaveCustomProperties": false,
"name": "POI",
"functions": [
{
"name": "Destroy", 
"returnType": "void",
"args": [
]
},
{
"name": "SetVisibleForPlayer", 
"returnType": "void",
"args": [
"class IPlayer * __ptr64",
"bool"
]
},
{
"name": "IsVisibleForPlayer", 
"returnType": "bool",
"args": [
"class IPlayer * __ptr64"
]
}
],
"properties": [
{
"name": "type", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "progress", 
"isWriteable": true,
"type": "float"
},
{
"name": "progressMax", 
"isWriteable": true,
"type": "float"
},
{
"name": "networkId", 
"isWriteable": false,
"type": "unsigned int"
},
{
"name": "position", 
"isWriteable": true,
"type": "class math::basic_vector3<float>"
},
{
"name": "minDistance", 
"isWriteable": true,
"type": "float"
},
{
"name": "maxDistance", 
"isWriteable": true,
"type": "float"
},
{
"name": "text", 
"isWriteable": true,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "visible", 
"isWriteable": true,
"type": "bool"
},
{
"name": "flashing", 
"isWriteable": true,
"type": "bool"
},
{
"name": "clampedToScreen", 
"isWriteable": true,
"type": "bool"
},
{
"name": "dimension", 
"isWriteable": true,
"type": "unsigned int"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": true,
"canHaveCustomProperties": false,
"name": "PlayerNameTag",
"functions": [
{
"name": "SetNameForPlayer", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >",
"class IPlayer * __ptr64"
]
},
{
"name": "SetFontForPlayer", 
"returnType": "void",
"args": [
"class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >",
"class IPlayer * __ptr64"
]
},
{
"name": "GetFontSize", 
"returnType": "class std::vector<class scr::ScriptValue,class std::allocator<class scr::ScriptValue> >",
"args": [
]
},
{
"name": "SetFontSize", 
"returnType": "void",
"args": [
"float",
"float"
]
},
{
"name": "SetFontSizeForPlayer", 
"returnType": "void",
"args": [
"float",
"float",
"class IPlayer * __ptr64"
]
},
{
"name": "SetHealthBarBackgroundColorForPlayer", 
"returnType": "void",
"args": [
"struct RGBA",
"class IPlayer * __ptr64"
]
},
{
"name": "SetArmorBarBackgroundColorForPlayer", 
"returnType": "void",
"args": [
"struct RGBA",
"class IPlayer * __ptr64"
]
},
{
"name": "SetHealthBarColorForPlayer", 
"returnType": "void",
"args": [
"struct RGBA",
"class IPlayer * __ptr64"
]
},
{
"name": "SetArmorBarColorForPlayer", 
"returnType": "void",
"args": [
"struct RGBA",
"class IPlayer * __ptr64"
]
},
{
"name": "SetTagColorForPlayer", 
"returnType": "void",
"args": [
"struct RGBA",
"class IPlayer * __ptr64"
]
},
{
"name": "SetShadowColorForPlayer", 
"returnType": "void",
"args": [
"struct RGBA",
"class IPlayer * __ptr64"
]
},
{
"name": "SetShadowPositionForPlayer", 
"returnType": "void",
"args": [
"class math::basic_vector2<float>",
"class IPlayer * __ptr64"
]
},
{
"name": "SetDisplayHealthBarForPlayer", 
"returnType": "void",
"args": [
"bool",
"class IPlayer * __ptr64"
]
},
{
"name": "SetDisplayArmorBarForPlayer", 
"returnType": "void",
"args": [
"bool",
"class IPlayer * __ptr64"
]
},
{
"name": "SetDisplayTagForPlayer", 
"returnType": "void",
"args": [
"bool",
"class IPlayer * __ptr64"
]
},
{
"name": "SetDrawDistanceForPlayer", 
"returnType": "void",
"args": [
"float",
"class IPlayer * __ptr64"
]
},
{
"name": "SetTagPositionForPlayer", 
"returnType": "void",
"args": [
"unsigned int",
"class IPlayer * __ptr64"
]
},
{
"name": "SetIgnoreWorldBountriesForPlayer", 
"returnType": "void",
"args": [
"bool",
"class IPlayer * __ptr64"
]
}
],
"properties": [
{
"name": "name", 
"isWriteable": true,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "font", 
"isWriteable": true,
"type": "class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >"
},
{
"name": "healthBarBackgroundColor", 
"isWriteable": true,
"type": "struct RGBA"
},
{
"name": "armorBarBackgroundColor", 
"isWriteable": true,
"type": "struct RGBA"
},
{
"name": "healthBarColor", 
"isWriteable": true,
"type": "struct RGBA"
},
{
"name": "armorBarColor", 
"isWriteable": true,
"type": "struct RGBA"
},
{
"name": "tagColor", 
"isWriteable": true,
"type": "struct RGBA"
},
{
"name": "shadowColor", 
"isWriteable": true,
"type": "struct RGBA"
},
{
"name": "shadowPosition", 
"isWriteable": true,
"type": "class math::basic_vector2<float>"
},
{
"name": "displayHealthBar", 
"isWriteable": true,
"type": "bool"
},
{
"name": "displayArmorBar", 
"isWriteable": true,
"type": "bool"
},
{
"name": "displayTag", 
"isWriteable": true,
"type": "bool"
},
{
"name": "drawDistance", 
"isWriteable": true,
"type": "float"
},
{
"name": "tagPosition", 
"isWriteable": true,
"type": "unsigned int"
},
{
"name": "ignoreWorldBountries", 
"isWriteable": true,
"type": "bool"
}
]
},
{
"isConstructible": false,
"isAutoDestroy": false,
"canHaveCustomProperties": false,
"name": "global",
"functions": [
],
"properties": [
{
"name": "jcmp", 
"isWriteable": false,
"type": "struct `public: void __cdecl Server::Initialize(int,char const * __ptr64 * __ptr64 const) __ptr64'::`2'::JCMPScriptNamespace * __ptr64"
},
{
"name": "events", 
"isWriteable": false,
"type": "class scr::IEventSystem * __ptr64"
}
]
}]
